services:
  web:
    build: .
    container_name: django_app
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:82"
    volumes:
      - ./server:/app/server
    ports:
      - "82:82"
    env_file:
      - ./server/.env

  notification_worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: notification_worker
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py notify_worker
    volumes:
      - ./server:/app_worker
    env_file:
      - ./server/.env

  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: